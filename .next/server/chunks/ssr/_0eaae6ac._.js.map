{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport type { Transaction } from './types';\n\n// In-memory mock database moved directly into actions.ts\nlet transactions: Transaction[] = [\n    { \n      id: '1', \n      type: 'income', \n      amount: 1250.75, \n      date: new Date('2024-07-15'), \n      description: 'Donaciones del mes - Caja A', \n      category: 'congregation',\n      sentToBranch: false,\n    },\n    { \n      id: '2', \n      type: 'income', \n      amount: 350.00, \n      date: new Date('2024-07-20'), \n      description: 'Donación Obra Mundial', \n      category: 'worldwide_work',\n      sentToBranch: true,\n    },\n    { \n      id: '3', \n      type: 'expense', \n      amount: 85.50, \n      date: new Date('2024-07-22'), \n      description: 'Factura de electricidad', \n    },\n    { \n      id: '4', \n      type: 'income', \n      amount: 150.00, \n      date: new Date('2024-08-05'), \n      description: 'Donación para renovación', \n      category: 'renovation',\n      sentToBranch: false,\n    },\n    { \n      id: '5', \n      type: 'income', \n      amount: 400.00, \n      date: new Date('2024-08-10'), \n      description: 'Donación Obra Mundial (electrónico)', \n      category: 'worldwide_work',\n      sentToBranch: false,\n    },\n    {\n      id: '6',\n      type: 'branch_transfer',\n      amount: 350.00,\n      date: new Date('2024-07-28'),\n      description: 'Envío a sucursal - Julio',\n    },\n    { \n      id: '7', \n      type: 'expense', \n      amount: 210.00, \n      date: new Date('2024-08-18'), \n      description: 'Material de limpieza', \n    },\n    // ---- START 2025 DATA ----\n    { \n        id: '8', \n        type: 'income', \n        amount: 1300.00, \n        date: new Date('2025-01-15'), \n        description: 'Donaciones Enero', \n        category: 'congregation',\n        sentToBranch: false,\n    },\n    { \n        id: '9', \n        type: 'expense', \n        amount: 100.00, \n        date: new Date('2025-01-20'), \n        description: 'Factura de agua', \n    },\n    { \n        id: '10', \n        type: 'income', \n        amount: 250.00, \n        date: new Date('2025-01-25'), \n        description: 'Donación Obra Mundial', \n        category: 'worldwide_work',\n        sentToBranch: false,\n    }\n    // ---- END 2025 DATA ----\n];\n\n// Helper functions are now local to this file and not exported.\nconst generateId = () => String(Date.now() + Math.random());\n\nconst getTransactions = (): Transaction[] => {\n    // Return a deep copy to prevent mutation of the original data.\n    // JSON stringify/parse converts Dates to ISO strings.\n    const transactionsAsStrings = JSON.parse(JSON.stringify(transactions));\n    // We must convert the date strings back to Date objects.\n    return transactionsAsStrings.map((t: any) => ({\n        ...t,\n        date: new Date(t.date),\n    }));\n};\n\nconst addTransaction = (transaction: Omit<Transaction, 'id'>): void => {\n    const newTransaction: Transaction = {\n        id: generateId(),\n        ...transaction,\n    };\n    transactions.unshift(newTransaction);\n};\n\n\nconst updateTransaction = (id: string, data: Partial<Transaction>): void => {\n    const index = transactions.findIndex(t => t.id === id);\n    if (index !== -1) {\n        // Ensure the date is a Date object before merging.\n        const updatedData = { ...data };\n        if (typeof data.date === 'string') {\n            updatedData.date = new Date(data.date);\n        }\n        transactions[index] = { ...transactions[index], ...updatedData };\n    }\n};\n\nconst markTransactionsAsSent = (transactionIds: string[]): void => {\n    transactions = transactions.map(t => {\n        if (transactionIds.includes(t.id)) {\n            return { ...t, sentToBranch: true };\n        }\n        return t;\n    });\n};\n// End of in-memory database logic\n\nconst IncomeSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  category: z.enum(['congregation', 'worldwide_work', 'renovation'], {\n    errorMap: () => ({ message: 'Por favor, selecciona una categoría válida.' }),\n  }),\n});\n\nconst ExpenseSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n});\n\nconst BranchTransferSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser mayor que cero.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  transactionIds: z.array(z.string()).min(1, { message: 'Debes seleccionar al menos una transacción.' }),\n});\n\nconst UpdateTransactionSchema = z.object({\n    id: z.string(),\n    type: z.enum(['income', 'expense']),\n    amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n    date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n    description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n    category: z.enum(['congregation', 'worldwide_work', 'renovation']).optional(),\n    sentToBranch: z.boolean().optional(),\n});\n\nexport async function addIncomeAction(data: z.infer<typeof IncomeSchema>) {\n  const validatedFields = IncomeSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n  \n  try {\n    addTransaction({\n        type: 'income',\n        amount: validatedFields.data.amount,\n        date: new Date(validatedFields.data.date),\n        description: validatedFields.data.description || '',\n        category: validatedFields.data.category,\n        sentToBranch: false,\n    });\n    revalidatePath('/');\n    return { success: true, message: 'Ingreso añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el ingreso.' };\n  }\n}\n\nexport async function addExpenseAction(data: z.infer<typeof ExpenseSchema>) {\n  const validatedFields = ExpenseSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n\n  try {\n    addTransaction({ \n        type: 'expense',\n        amount: validatedFields.data.amount,\n        date: new Date(validatedFields.data.date),\n        description: validatedFields.data.description || '',\n     });\n    revalidatePath('/');\n    return { success: true, message: 'Gasto añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el gasto.' };\n  }\n}\n\nexport async function addBranchTransferAction(data: z.infer<typeof BranchTransferSchema>) {\n    const validatedFields = BranchTransferSchema.safeParse(data);\n  \n    if (!validatedFields.success) {\n      return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n  \n    try {\n      const { amount, date, description, transactionIds } = validatedFields.data;\n\n      markTransactionsAsSent(transactionIds);\n      addTransaction({ \n        amount, \n        date: new Date(date), \n        type: 'branch_transfer', \n        description: description || 'Envío a la sucursal',\n      });\n\n      revalidatePath('/');\n      return { success: true, message: 'Envío a la sucursal añadido correctamente.' };\n    } catch (e: any) {\n      return { success: false, message: e.message || 'Error al añadir el envío a la sucursal.' };\n    }\n  }\n\nexport async function updateTransactionAction(data: z.infer<typeof UpdateTransactionSchema>) {\n    const validatedFields = UpdateTransactionSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    try {\n        const { id, ...rest } = validatedFields.data;\n        \n        const transactionData: Partial<Transaction> = {\n            ...rest,\n            date: new Date(rest.date), // CRITICAL: Ensure date is a Date object before saving\n            description: rest.description || '',\n        };\n\n        updateTransaction(id, transactionData);\n        revalidatePath('/');\n        return { success: true, message: 'Transacción actualizada correctamente.' };\n    } catch (e: any) {\n        const message = e instanceof Error ? e.message : 'Ocurrió un error desconocido.';\n        return { success: false, message: `Error al actualizar la transacción: ${message}` };\n    }\n}\n\n\nexport async function getTransactionsAction() {\n    try {\n        const transactionsData = getTransactions();\n        // The dates in our mock data are Dates, but they need to be serialized for the client.\n        const serializedTransactions = transactionsData.map(t => ({\n            ...t,\n            date: t.date.toISOString(),\n        }));\n        \n        return { success: true, data: serializedTransactions };\n    } catch(e: any) {\n        const errorMessage = e instanceof Error ? e.message : String(e);\n        return { success: false, message: `Error al obtener los datos: ${errorMessage}` };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getTransactionsAction as '0059c39c4843399588b9fabd0da04ea8cac93e8bf4'} from 'ACTIONS_MODULE0'\nexport {addIncomeAction as '40f31bab04db97c60f92086038abade741566d0a98'} from 'ACTIONS_MODULE0'\nexport {addExpenseAction as '4075b38ee18d5d5f3ed91a544fbce782485130bc88'} from 'ACTIONS_MODULE0'\nexport {addBranchTransferAction as '400b903e5b214d2b26dd8d0d43da57c3dff4ffd014'} from 'ACTIONS_MODULE0'\nexport {updateTransactionAction as '40621b0f87d67a854d8a572d5914f58ff7c4c088b9'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}