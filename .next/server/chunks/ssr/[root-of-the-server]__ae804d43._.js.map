{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 799, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { db } from './firebase';\nimport {\n  collection,\n  addDoc,\n  updateDoc,\n  doc,\n  writeBatch,\n  Timestamp,\n} from 'firebase/firestore';\n\nconst IncomeSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  category: z.enum(['congregation', 'worldwide_work', 'renovation'], {\n    errorMap: () => ({ message: 'Por favor, selecciona una categoría válida.' }),\n  }),\n});\n\nconst ExpenseSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n});\n\nconst BranchTransferSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser mayor que cero.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  transactionIds: z.array(z.string()).min(1, { message: 'Debes seleccionar al menos una transacción.' }),\n});\n\nconst UpdateTransactionSchema = z.object({\n    id: z.string(),\n    type: z.enum(['income', 'expense']),\n    amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n    date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n    description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n    category: z.enum(['congregation', 'worldwide_work', 'renovation']).optional(),\n    sentToBranch: z.boolean().optional(),\n});\n\nexport async function addIncomeAction(data: z.infer<typeof IncomeSchema>) {\n  const validatedFields = IncomeSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n  \n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description, category } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'income',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n        category,\n        sentToBranch: false,\n    });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Ingreso añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el ingreso.' };\n  }\n}\n\nexport async function addExpenseAction(data: z.infer<typeof ExpenseSchema>) {\n  const validatedFields = ExpenseSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n\n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'expense',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n     });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Gasto añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el gasto.' };\n  }\n}\n\nexport async function addBranchTransferAction(data: z.infer<typeof BranchTransferSchema>) {\n    const validatedFields = BranchTransferSchema.safeParse(data);\n  \n    if (!validatedFields.success) {\n      return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n      return { success: false, message: 'La base de datos no está disponible.' };\n    }\n  \n    try {\n      const { amount, date, description, transactionIds } = validatedFields.data;\n      \n      const batch = writeBatch(db);\n\n      // Mark selected transactions as sent\n      transactionIds.forEach(id => {\n          const docRef = doc(db, 'transactions', id);\n          batch.update(docRef, { sentToBranch: true });\n      });\n\n      // Add the new branch_transfer transaction\n      const newTransferRef = doc(collection(db, 'transactions'));\n      batch.set(newTransferRef, {\n        amount, \n        date: Timestamp.fromDate(new Date(date)), \n        type: 'branch_transfer', \n        description: description || 'Envío a la sucursal',\n      });\n\n      await batch.commit();\n\n      revalidatePath('/dashboard');\n      return { success: true, message: 'Envío a la sucursal añadido correctamente.' };\n    } catch (e: any) {\n      return { success: false, message: e.message || 'Error al añadir el envío a la sucursal.' };\n    }\n  }\n\nexport async function updateTransactionAction(data: z.infer<typeof UpdateTransactionSchema>) {\n    const validatedFields = UpdateTransactionSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n        return { success: false, message: 'La base de datos no está disponible.' };\n    }\n\n    try {\n        const { id, ...rest } = validatedFields.data;\n        \n        const transactionRef = doc(db, 'transactions', id);\n        \n        // Firestore requires a plain object.\n        const updateData: any = {\n            ...rest,\n            date: Timestamp.fromDate(new Date(rest.date)),\n            description: rest.description || '',\n        };\n\n        // Remove undefined fields so Firestore doesn't overwrite them\n        Object.keys(updateData).forEach(key => updateData[key] === undefined && delete updateData[key]);\n        \n        await updateDoc(transactionRef, updateData);\n\n        revalidatePath('/dashboard');\n        return { success: true, message: 'Transacción actualizada correctamente.' };\n    } catch (e: any) {\n        const message = e instanceof Error ? e.message : 'Ocurrió un error desconocido.';\n        return { success: false, message: `Error al actualizar la transacción: ${message}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA+CsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 812, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { db } from './firebase';\nimport {\n  collection,\n  addDoc,\n  updateDoc,\n  doc,\n  writeBatch,\n  Timestamp,\n} from 'firebase/firestore';\n\nconst IncomeSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  category: z.enum(['congregation', 'worldwide_work', 'renovation'], {\n    errorMap: () => ({ message: 'Por favor, selecciona una categoría válida.' }),\n  }),\n});\n\nconst ExpenseSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n});\n\nconst BranchTransferSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser mayor que cero.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  transactionIds: z.array(z.string()).min(1, { message: 'Debes seleccionar al menos una transacción.' }),\n});\n\nconst UpdateTransactionSchema = z.object({\n    id: z.string(),\n    type: z.enum(['income', 'expense']),\n    amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n    date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n    description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n    category: z.enum(['congregation', 'worldwide_work', 'renovation']).optional(),\n    sentToBranch: z.boolean().optional(),\n});\n\nexport async function addIncomeAction(data: z.infer<typeof IncomeSchema>) {\n  const validatedFields = IncomeSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n  \n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description, category } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'income',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n        category,\n        sentToBranch: false,\n    });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Ingreso añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el ingreso.' };\n  }\n}\n\nexport async function addExpenseAction(data: z.infer<typeof ExpenseSchema>) {\n  const validatedFields = ExpenseSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n\n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'expense',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n     });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Gasto añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el gasto.' };\n  }\n}\n\nexport async function addBranchTransferAction(data: z.infer<typeof BranchTransferSchema>) {\n    const validatedFields = BranchTransferSchema.safeParse(data);\n  \n    if (!validatedFields.success) {\n      return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n      return { success: false, message: 'La base de datos no está disponible.' };\n    }\n  \n    try {\n      const { amount, date, description, transactionIds } = validatedFields.data;\n      \n      const batch = writeBatch(db);\n\n      // Mark selected transactions as sent\n      transactionIds.forEach(id => {\n          const docRef = doc(db, 'transactions', id);\n          batch.update(docRef, { sentToBranch: true });\n      });\n\n      // Add the new branch_transfer transaction\n      const newTransferRef = doc(collection(db, 'transactions'));\n      batch.set(newTransferRef, {\n        amount, \n        date: Timestamp.fromDate(new Date(date)), \n        type: 'branch_transfer', \n        description: description || 'Envío a la sucursal',\n      });\n\n      await batch.commit();\n\n      revalidatePath('/dashboard');\n      return { success: true, message: 'Envío a la sucursal añadido correctamente.' };\n    } catch (e: any) {\n      return { success: false, message: e.message || 'Error al añadir el envío a la sucursal.' };\n    }\n  }\n\nexport async function updateTransactionAction(data: z.infer<typeof UpdateTransactionSchema>) {\n    const validatedFields = UpdateTransactionSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n        return { success: false, message: 'La base de datos no está disponible.' };\n    }\n\n    try {\n        const { id, ...rest } = validatedFields.data;\n        \n        const transactionRef = doc(db, 'transactions', id);\n        \n        // Firestore requires a plain object.\n        const updateData: any = {\n            ...rest,\n            date: Timestamp.fromDate(new Date(rest.date)),\n            description: rest.description || '',\n        };\n\n        // Remove undefined fields so Firestore doesn't overwrite them\n        Object.keys(updateData).forEach(key => updateData[key] === undefined && delete updateData[key]);\n        \n        await updateDoc(transactionRef, updateData);\n\n        revalidatePath('/dashboard');\n        return { success: true, message: 'Transacción actualizada correctamente.' };\n    } catch (e: any) {\n        const message = e instanceof Error ? e.message : 'Ocurrió un error desconocido.';\n        return { success: false, message: `Error al actualizar la transacción: ${message}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA2EsB,mBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { db } from './firebase';\nimport {\n  collection,\n  addDoc,\n  updateDoc,\n  doc,\n  writeBatch,\n  Timestamp,\n} from 'firebase/firestore';\n\nconst IncomeSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  category: z.enum(['congregation', 'worldwide_work', 'renovation'], {\n    errorMap: () => ({ message: 'Por favor, selecciona una categoría válida.' }),\n  }),\n});\n\nconst ExpenseSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n});\n\nconst BranchTransferSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser mayor que cero.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  transactionIds: z.array(z.string()).min(1, { message: 'Debes seleccionar al menos una transacción.' }),\n});\n\nconst UpdateTransactionSchema = z.object({\n    id: z.string(),\n    type: z.enum(['income', 'expense']),\n    amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n    date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n    description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n    category: z.enum(['congregation', 'worldwide_work', 'renovation']).optional(),\n    sentToBranch: z.boolean().optional(),\n});\n\nexport async function addIncomeAction(data: z.infer<typeof IncomeSchema>) {\n  const validatedFields = IncomeSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n  \n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description, category } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'income',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n        category,\n        sentToBranch: false,\n    });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Ingreso añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el ingreso.' };\n  }\n}\n\nexport async function addExpenseAction(data: z.infer<typeof ExpenseSchema>) {\n  const validatedFields = ExpenseSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n\n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'expense',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n     });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Gasto añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el gasto.' };\n  }\n}\n\nexport async function addBranchTransferAction(data: z.infer<typeof BranchTransferSchema>) {\n    const validatedFields = BranchTransferSchema.safeParse(data);\n  \n    if (!validatedFields.success) {\n      return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n      return { success: false, message: 'La base de datos no está disponible.' };\n    }\n  \n    try {\n      const { amount, date, description, transactionIds } = validatedFields.data;\n      \n      const batch = writeBatch(db);\n\n      // Mark selected transactions as sent\n      transactionIds.forEach(id => {\n          const docRef = doc(db, 'transactions', id);\n          batch.update(docRef, { sentToBranch: true });\n      });\n\n      // Add the new branch_transfer transaction\n      const newTransferRef = doc(collection(db, 'transactions'));\n      batch.set(newTransferRef, {\n        amount, \n        date: Timestamp.fromDate(new Date(date)), \n        type: 'branch_transfer', \n        description: description || 'Envío a la sucursal',\n      });\n\n      await batch.commit();\n\n      revalidatePath('/dashboard');\n      return { success: true, message: 'Envío a la sucursal añadido correctamente.' };\n    } catch (e: any) {\n      return { success: false, message: e.message || 'Error al añadir el envío a la sucursal.' };\n    }\n  }\n\nexport async function updateTransactionAction(data: z.infer<typeof UpdateTransactionSchema>) {\n    const validatedFields = UpdateTransactionSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n        return { success: false, message: 'La base de datos no está disponible.' };\n    }\n\n    try {\n        const { id, ...rest } = validatedFields.data;\n        \n        const transactionRef = doc(db, 'transactions', id);\n        \n        // Firestore requires a plain object.\n        const updateData: any = {\n            ...rest,\n            date: Timestamp.fromDate(new Date(rest.date)),\n            description: rest.description || '',\n        };\n\n        // Remove undefined fields so Firestore doesn't overwrite them\n        Object.keys(updateData).forEach(key => updateData[key] === undefined && delete updateData[key]);\n        \n        await updateDoc(transactionRef, updateData);\n\n        revalidatePath('/dashboard');\n        return { success: true, message: 'Transacción actualizada correctamente.' };\n    } catch (e: any) {\n        const message = e instanceof Error ? e.message : 'Ocurrió un error desconocido.';\n        return { success: false, message: `Error al actualizar la transacción: ${message}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAqGsB,0BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 879, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1004, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/add-transaction-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type UseFormReturn } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { CalendarIcon, Loader2 } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  FormDescription,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { useToast } from '@/hooks/use-toast';\nimport { addIncomeAction, addExpenseAction, addBranchTransferAction } from '@/lib/actions';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { Calendar } from './ui/calendar';\nimport { cn } from '@/lib/utils';\nimport type { Transaction } from '@/lib/types';\nimport { Checkbox } from './ui/checkbox';\nimport { ScrollArea } from './ui/scroll-area';\n\nconst incomeSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.date({ required_error: 'La fecha es obligatoria.' }),\n  description: z.string().max(100).optional(),\n  category: z.enum(['congregation', 'worldwide_work', 'renovation'], {\n    required_error: 'Por favor, selecciona una categoría.',\n  }),\n});\n\nconst expenseSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.date({ required_error: 'La fecha es obligatoria.' }),\n  description: z.string().max(100).optional(),\n});\n\nconst branchTransferSchema = z.object({\n    date: z.date({ required_error: 'La fecha es obligatoria.' }),\n    description: z.string().max(100).optional(),\n    transactionIds: z.array(z.string()).refine(value => value.length > 0, {\n      message: 'Debes seleccionar al menos una transacción para enviar.',\n    }),\n});\n\ntype IncomeFormValues = z.infer<typeof incomeSchema>;\ntype ExpenseFormValues = z.infer<typeof expenseSchema>;\ntype BranchTransferFormValues = z.infer<typeof branchTransferSchema>;\n\ninterface AddTransactionDialogProps {\n    pendingBranchTransactions: Transaction[];\n}\n\nexport function AddTransactionDialog({ pendingBranchTransactions }: AddTransactionDialogProps) {\n  const [open, setOpen] = useState(false);\n  const { toast } = useToast();\n\n  const incomeForm = useForm<IncomeFormValues>({\n    resolver: zodResolver(incomeSchema),\n    defaultValues: {\n      amount: 0,\n      description: '',\n    },\n  });\n\n  const expenseForm = useForm<ExpenseFormValues>({\n    resolver: zodResolver(expenseSchema),\n    defaultValues: {\n      amount: 0,\n      description: '',\n    },\n  });\n\n  const branchTransferForm = useForm<BranchTransferFormValues>({\n      resolver: zodResolver(branchTransferSchema),\n      defaultValues: {\n        description: 'Envío a la sucursal',\n        transactionIds: [],\n      },\n    });\n\n  const handleSuccess = (message: string) => {\n    toast({\n      title: 'Éxito',\n      description: message,\n    });\n    setOpen(false);\n    // This will trigger a reload of the page to reflect the new data.\n    window.location.reload();\n  };\n\n  const handleError = (message: string) => {\n    toast({\n      variant: 'destructive',\n      title: 'Error',\n      description: message,\n    });\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button>Añadir Transacción</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle>Añadir Nueva Transacción</DialogTitle>\n          <DialogDescription>\n            Selecciona el tipo de transacción y completa los detalles.\n          </DialogDescription>\n        </DialogHeader>\n        <Tabs defaultValue=\"income\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"income\">Ingreso</TabsTrigger>\n            <TabsTrigger value=\"expense\">Gasto</TabsTrigger>\n            <TabsTrigger value=\"branch_transfer\">Envío Sucursal</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"income\">\n            <IncomeForm form={incomeForm} onSuccess={handleSuccess} onError={handleError} />\n          </TabsContent>\n          <TabsContent value=\"expense\">\n            <ExpenseForm form={expenseForm} onSuccess={handleSuccess} onError={handleError} />\n          </TabsContent>\n          <TabsContent value=\"branch_transfer\">\n            <BranchTransferForm \n                form={branchTransferForm}\n                onSuccess={handleSuccess} \n                onError={handleError} \n                pendingTransactions={pendingBranchTransactions}\n            />\n          </TabsContent>\n        </Tabs>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\ninterface IncomeFormProps {\n    form: UseFormReturn<IncomeFormValues>;\n    onSuccess: (msg: string) => void;\n    onError: (msg: string) => void;\n}\n\nfunction IncomeForm({ form, onSuccess, onError }: IncomeFormProps) {\n  const { isSubmitting } = form.formState;\n\n  async function onSubmit(values: IncomeFormValues) {\n    const data = {\n        ...values,\n        date: format(values.date, 'yyyy-MM-dd'),\n    };\n    const result = await addIncomeAction(data);\n    if (result.success) {\n      onSuccess(result.message);\n      form.reset();\n    } else {\n      onError(result.message || 'Ocurrió un error desconocido.');\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n        <FormField\n          control={form.control}\n          name=\"amount\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Cantidad</FormLabel>\n              <FormControl>\n                <Input type=\"number\" step=\"0.01\" placeholder=\"0.00\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"category\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Categoría</FormLabel>\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Selecciona una categoría\" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"congregation\">Congregación</SelectItem>\n                  <SelectItem value=\"worldwide_work\">Obra Mundial</SelectItem>\n                  <SelectItem value=\"renovation\">Renovación</SelectItem>\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"date\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Fecha</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant={'outline'}\n                      className={cn(\n                        'w-full pl-3 text-left font-normal',\n                        !field.value && 'text-muted-foreground'\n                      )}\n                    >\n                      {field.value ? (\n                        format(field.value, 'PPP', { locale: es })\n                      ) : (\n                        <span>Elige una fecha</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) =>\n                      date > new Date() || date < new Date('1900-01-01')\n                    }\n                    initialFocus\n                    locale={es}\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Descripción (Opcional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"p.ej., Donación mensual\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <DialogFooter className=\"pt-4\">\n            <DialogClose asChild>\n                <Button type=\"button\" variant=\"outline\">Cancelar</Button>\n            </DialogClose>\n            <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Añadir Ingreso\n            </Button>\n        </DialogFooter>\n      </form>\n    </Form>\n  );\n}\n\ninterface ExpenseFormProps {\n    form: UseFormReturn<ExpenseFormValues>;\n    onSuccess: (msg: string) => void;\n    onError: (msg: string) => void;\n}\n\nfunction ExpenseForm({ form, onSuccess, onError }: ExpenseFormProps) {\n  const { isSubmitting } = form.formState;\n\n  async function onSubmit(values: ExpenseFormValues) {\n    const data = {\n        ...values,\n        date: format(values.date, 'yyyy-MM-dd'),\n    };\n    const result = await addExpenseAction(data);\n    if (result.success) {\n      onSuccess(result.message);\n      form.reset();\n    } else {\n      onError(result.message || 'Ocurrió un error desconocido.');\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n        <FormField\n          control={form.control}\n          name=\"amount\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Cantidad</FormLabel>\n              <FormControl>\n                <Input type=\"number\" step=\"0.01\" placeholder=\"0.00\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"date\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Fecha del Gasto</FormLabel>\n               <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant={'outline'}\n                      className={cn(\n                        'w-full pl-3 text-left font-normal',\n                        !field.value && 'text-muted-foreground'\n                      )}\n                    >\n                      {field.value ? (\n                        format(field.value, 'PPP', { locale: es })\n                      ) : (\n                        <span>Elige una fecha</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) =>\n                      date > new Date() || date < new Date('1900-01-01')\n                    }\n                    initialFocus\n                    locale={es}\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Descripción</FormLabel>\n              <FormControl>\n                <Input placeholder=\"p.ej., Factura de servicios\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <DialogFooter className=\"pt-4\">\n             <DialogClose asChild>\n                <Button type=\"button\" variant=\"outline\">Cancelar</Button>\n            </DialogClose>\n            <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Añadir Gasto\n            </Button>\n        </DialogFooter>\n      </form>\n    </Form>\n  );\n}\n\nconst formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-ES', {\n      style: 'currency',\n      currency: 'EUR',\n    }).format(amount);\n};\n\nconst categoryLabels: Record<string, string> = {\n    congregation: 'Congregación',\n    worldwide_work: 'Obra Mundial',\n    renovation: 'Renovación'\n}\n\ninterface BranchTransferFormProps {\n    form: UseFormReturn<BranchTransferFormValues>;\n    onSuccess: (msg: string) => void;\n    onError: (msg: string) => void;\n    pendingTransactions: Transaction[];\n}\n\nfunction BranchTransferForm({ \n    form,\n    onSuccess, \n    onError,\n    pendingTransactions,\n}: BranchTransferFormProps) {\n    const { isSubmitting } = form.formState;\n\n    const selectedTransactionIds = form.watch('transactionIds') || [];\n    const totalAmount = selectedTransactionIds.reduce((sum, id) => {\n        const transaction = pendingTransactions.find(t => t.id === id);\n        return sum + (transaction?.amount || 0);\n    }, 0);\n  \n    async function onSubmit(values: BranchTransferFormValues) {\n      const data = {\n          ...values,\n          date: format(values.date, 'yyyy-MM-dd'),\n          amount: totalAmount,\n      };\n      const result = await addBranchTransferAction(data);\n      if (result.success) {\n        onSuccess(result.message);\n        form.reset();\n      } else {\n        onError(result.message || 'Ocurrió un error desconocido.');\n      }\n    }\n  \n    return (\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n            <FormField\n                control={form.control}\n                name=\"transactionIds\"\n                render={() => (\n                    <FormItem>\n                        <div className=\"mb-4\">\n                            <FormLabel className=\"text-base\">Donaciones Pendientes de Envío</FormLabel>\n                            <FormDescription>\n                                Selecciona las donaciones que quieres incluir en este envío.\n                            </FormDescription>\n                        </div>\n                        <ScrollArea className=\"h-40 w-full rounded-md border p-4\">\n                         {pendingTransactions.length === 0 ? (\n                            <p className=\"text-sm text-muted-foreground text-center py-10\">No hay donaciones pendientes.</p>\n                         ) : pendingTransactions.map((item) => (\n                            <FormField\n                                key={item.id}\n                                control={form.control}\n                                name=\"transactionIds\"\n                                render={({ field }) => {\n                                return (\n                                    <FormItem\n                                    key={item.id}\n                                    className=\"flex flex-row items-center justify-between space-x-3 py-2 border-b last:border-b-0\"\n                                    >\n                                        <FormControl>\n                                            <Checkbox\n                                            checked={field.value?.includes(item.id)}\n                                            onCheckedChange={(checked) => {\n                                                return checked\n                                                ? field.onChange([...(field.value || []), item.id])\n                                                : field.onChange(\n                                                    field.value?.filter(\n                                                        (value) => value !== item.id\n                                                    )\n                                                    )\n                                            }}\n                                            />\n                                        </FormControl>\n                                        <FormLabel className=\"font-normal flex-1 cursor-pointer\">\n                                           <div className='flex justify-between items-center'>\n                                                <div>\n                                                    <p className='text-sm'>{categoryLabels[item.category!]}</p>\n                                                    <p className='text-xs text-muted-foreground'>{format(new Date(item.date), 'PPP', { locale: es })}</p>\n                                                </div>\n                                                <p className='font-medium'>{formatCurrency(item.amount)}</p>\n                                           </div>\n                                        </FormLabel>\n                                    </FormItem>\n                                )\n                                }}\n                            />\n                            ))}\n                        </ScrollArea>\n                        <FormMessage />\n                    </FormItem>\n                )}\n            />\n            <div className=\"flex justify-between items-center font-semibold text-lg p-2 bg-muted rounded-md\">\n                <span>Total a Enviar:</span>\n                <span>{formatCurrency(totalAmount)}</span>\n            </div>\n          <FormField\n            control={form.control}\n            name=\"date\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-col\">\n                <FormLabel>Fecha del Envío</FormLabel>\n                 <Popover>\n                  <PopoverTrigger asChild>\n                    <FormControl>\n                      <Button\n                        variant={'outline'}\n                        className={cn(\n                          'w-full pl-3 text-left font-normal',\n                          !field.value && 'text-muted-foreground'\n                        )}\n                      >\n                        {field.value ? (\n                          format(field.value, 'PPP', { locale: es })\n                        ) : (\n                          <span>Elige una fecha</span>\n                        )}\n                        <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                      </Button>\n                    </FormControl>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                    <Calendar\n                      mode=\"single\"\n                      selected={field.value}\n                      onSelect={field.onChange}\n                      disabled={(date) =>\n                        date > new Date() || date < new Date('1900-01-01')\n                      }\n                      initialFocus\n                      locale={es}\n                    />\n                  </PopoverContent>\n                </Popover>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Descripción</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"p.ej., Envío mensual\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <DialogFooter className=\"pt-4\">\n               <DialogClose asChild>\n                  <Button type=\"button\" variant=\"outline\">Cancelar</Button>\n              </DialogClose>\n              <Button type=\"submit\" disabled={isSubmitting || totalAmount === 0}>\n                  {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                  Confirmar Envío\n              </Button>\n          </DialogFooter>\n        </form>\n      </Form>\n    );\n  }\n\n    "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAUA;AASA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AA9CA;;;;;;;;;;;;;;;;;;;;;;AAgDA,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5B,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAAE,SAAS;IAA2C;IACzF,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAA2B;IAC1D,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,QAAQ;IACzC,UAAU,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAgB;QAAkB;KAAa,EAAE;QACjE,gBAAgB;IAClB;AACF;AAEA,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAAE,SAAS;IAA2C;IACzF,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAA2B;IAC1D,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,QAAQ;AAC3C;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAA2B;IAC1D,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,QAAQ;IACzC,gBAAgB,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAA,QAAS,MAAM,MAAM,GAAG,GAAG;QACpE,SAAS;IACX;AACJ;AAUO,SAAS,qBAAqB,EAAE,yBAAyB,EAA6B;IAC3F,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,aAAa,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAoB;QAC3C,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,QAAQ;YACR,aAAa;QACf;IACF;IAEA,MAAM,cAAc,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAqB;QAC7C,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,QAAQ;YACR,aAAa;QACf;IACF;IAEA,MAAM,qBAAqB,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAA4B;QACzD,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,aAAa;YACb,gBAAgB,EAAE;QACpB;IACF;IAEF,MAAM,gBAAgB,CAAC;QACrB,MAAM;YACJ,OAAO;YACP,aAAa;QACf;QACA,QAAQ;QACR,kEAAkE;QAClE,OAAO,QAAQ,CAAC,MAAM;IACxB;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM;YACJ,SAAS;YACT,OAAO;YACP,aAAa;QACf;IACF;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;;0BAChC,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,OAAO;0BACpB,cAAA,8OAAC,kIAAA,CAAA,SAAM;8BAAC;;;;;;;;;;;0BAEV,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,WAAU;;kCACvB,8OAAC,kIAAA,CAAA,eAAY;;0CACX,8OAAC,kIAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,8OAAC,kIAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAIrB,8OAAC,gIAAA,CAAA,OAAI;wBAAC,cAAa;wBAAS,WAAU;;0CACpC,8OAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;kDAClB,8OAAC,gIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAS;;;;;;kDAC5B,8OAAC,gIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAU;;;;;;kDAC7B,8OAAC,gIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAkB;;;;;;;;;;;;0CAEvC,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,8OAAC;oCAAW,MAAM;oCAAY,WAAW;oCAAe,SAAS;;;;;;;;;;;0CAEnE,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,8OAAC;oCAAY,MAAM;oCAAa,WAAW;oCAAe,SAAS;;;;;;;;;;;0CAErE,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,8OAAC;oCACG,MAAM;oCACN,WAAW;oCACX,SAAS;oCACT,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrC;AAQA,SAAS,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAmB;IAC/D,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,SAAS;IAEvC,eAAe,SAAS,MAAwB;QAC9C,MAAM,OAAO;YACT,GAAG,MAAM;YACT,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAI,EAAE;QAC9B;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,kBAAe,AAAD,EAAE;QACrC,IAAI,OAAO,OAAO,EAAE;YAClB,UAAU,OAAO,OAAO;YACxB,KAAK,KAAK;QACZ,OAAO;YACL,QAAQ,OAAO,OAAO,IAAI;QAC5B;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,8OAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACrD,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,MAAK;wCAAS,MAAK;wCAAO,aAAY;wCAAQ,GAAG,KAAK;;;;;;;;;;;8CAE/D,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,kIAAA,CAAA,SAAM;oCAAC,eAAe,MAAM,QAAQ;oCAAE,cAAc,MAAM,KAAK;;sDAC9D,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,kIAAA,CAAA,gBAAa;0DACZ,cAAA,8OAAC,kIAAA,CAAA,cAAW;oDAAC,aAAY;;;;;;;;;;;;;;;;sDAG7B,8OAAC,kIAAA,CAAA,gBAAa;;8DACZ,8OAAC,kIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAe;;;;;;8DACjC,8OAAC,kIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAiB;;;;;;8DACnC,8OAAC,kIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAa;;;;;;;;;;;;;;;;;;8CAGnC,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,mIAAA,CAAA,UAAO;;sDACN,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,OAAO;sDACrB,cAAA,8OAAC,gIAAA,CAAA,cAAW;0DACV,cAAA,8OAAC,kIAAA,CAAA,SAAM;oDACL,SAAS;oDACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qCACA,CAAC,MAAM,KAAK,IAAI;;wDAGjB,MAAM,KAAK,GACV,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,EAAE,OAAO;4DAAE,QAAQ,4IAAA,CAAA,KAAE;wDAAC,mBAExC,8OAAC;sEAAK;;;;;;sEAER,8OAAC,8MAAA,CAAA,eAAY;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;sDAI9B,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,WAAU;4CAAa,OAAM;sDAC3C,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDACP,MAAK;gDACL,UAAU,MAAM,KAAK;gDACrB,UAAU,MAAM,QAAQ;gDACxB,UAAU,CAAC,OACT,OAAO,IAAI,UAAU,OAAO,IAAI,KAAK;gDAEvC,YAAY;gDACZ,QAAQ,4IAAA,CAAA,KAAE;;;;;;;;;;;;;;;;;8CAIhB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,aAAY;wCAA2B,GAAG,KAAK;;;;;;;;;;;8CAExD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,kIAAA,CAAA,eAAY;oBAAC,WAAU;;sCACpB,8OAAC,kIAAA,CAAA,cAAW;4BAAC,OAAO;sCAChB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,SAAQ;0CAAU;;;;;;;;;;;sCAE5C,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,UAAU;;gCAC3B,8BAAgB,8OAAC,iNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA+B;;;;;;;;;;;;;;;;;;;;;;;;AAOnF;AAQA,SAAS,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAoB;IACjE,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,SAAS;IAEvC,eAAe,SAAS,MAAyB;QAC/C,MAAM,OAAO;YACT,GAAG,MAAM;YACT,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAI,EAAE;QAC9B;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,mBAAgB,AAAD,EAAE;QACtC,IAAI,OAAO,OAAO,EAAE;YAClB,UAAU,OAAO,OAAO;YACxB,KAAK,KAAK;QACZ,OAAO;YACL,QAAQ,OAAO,OAAO,IAAI;QAC5B;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,8OAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACrD,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,MAAK;wCAAS,MAAK;wCAAO,aAAY;wCAAQ,GAAG,KAAK;;;;;;;;;;;8CAE/D,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACV,8OAAC,mIAAA,CAAA,UAAO;;sDACP,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,OAAO;sDACrB,cAAA,8OAAC,gIAAA,CAAA,cAAW;0DACV,cAAA,8OAAC,kIAAA,CAAA,SAAM;oDACL,SAAS;oDACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qCACA,CAAC,MAAM,KAAK,IAAI;;wDAGjB,MAAM,KAAK,GACV,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,EAAE,OAAO;4DAAE,QAAQ,4IAAA,CAAA,KAAE;wDAAC,mBAExC,8OAAC;sEAAK;;;;;;sEAER,8OAAC,8MAAA,CAAA,eAAY;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;sDAI9B,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,WAAU;4CAAa,OAAM;sDAC3C,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDACP,MAAK;gDACL,UAAU,MAAM,KAAK;gDACrB,UAAU,MAAM,QAAQ;gDACxB,UAAU,CAAC,OACT,OAAO,IAAI,UAAU,OAAO,IAAI,KAAK;gDAEvC,YAAY;gDACZ,QAAQ,4IAAA,CAAA,KAAE;;;;;;;;;;;;;;;;;8CAIhB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,aAAY;wCAA+B,GAAG,KAAK;;;;;;;;;;;8CAE5D,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,kIAAA,CAAA,eAAY;oBAAC,WAAU;;sCACnB,8OAAC,kIAAA,CAAA,cAAW;4BAAC,OAAO;sCACjB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,SAAQ;0CAAU;;;;;;;;;;;sCAE5C,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,UAAU;;gCAC3B,8BAAgB,8OAAC,iNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA+B;;;;;;;;;;;;;;;;;;;;;;;;AAOnF;AAEA,MAAM,iBAAiB,CAAC;IACpB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;IACZ,GAAG,MAAM,CAAC;AACd;AAEA,MAAM,iBAAyC;IAC3C,cAAc;IACd,gBAAgB;IAChB,YAAY;AAChB;AASA,SAAS,mBAAmB,EACxB,IAAI,EACJ,SAAS,EACT,OAAO,EACP,mBAAmB,EACG;IACtB,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,SAAS;IAEvC,MAAM,yBAAyB,KAAK,KAAK,CAAC,qBAAqB,EAAE;IACjE,MAAM,cAAc,uBAAuB,MAAM,CAAC,CAAC,KAAK;QACpD,MAAM,cAAc,oBAAoB,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC3D,OAAO,MAAM,CAAC,aAAa,UAAU,CAAC;IAC1C,GAAG;IAEH,eAAe,SAAS,MAAgC;QACtD,MAAM,OAAO;YACT,GAAG,MAAM;YACT,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,OAAO,IAAI,EAAE;YAC1B,QAAQ;QACZ;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,0BAAuB,AAAD,EAAE;QAC7C,IAAI,OAAO,OAAO,EAAE;YAClB,UAAU,OAAO,OAAO;YACxB,KAAK,KAAK;QACZ,OAAO;YACL,QAAQ,OAAO,OAAO,IAAI;QAC5B;IACF;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,8OAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACnD,8OAAC,gIAAA,CAAA,YAAS;oBACN,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,kBACJ,8OAAC,gIAAA,CAAA,WAAQ;;8CACL,8OAAC;oCAAI,WAAU;;sDACX,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAY;;;;;;sDACjC,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAIrB,8OAAC,0IAAA,CAAA,aAAU;oCAAC,WAAU;8CACpB,oBAAoB,MAAM,KAAK,kBAC7B,8OAAC;wCAAE,WAAU;kDAAkD;;;;;iDAC9D,oBAAoB,GAAG,CAAC,CAAC,qBAC1B,8OAAC,gIAAA,CAAA,YAAS;4CAEN,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE;gDAClB,qBACI,8OAAC,gIAAA,CAAA,WAAQ;oDAET,WAAU;;sEAEN,8OAAC,gIAAA,CAAA,cAAW;sEACR,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gEACT,SAAS,MAAM,KAAK,EAAE,SAAS,KAAK,EAAE;gEACtC,iBAAiB,CAAC;oEACd,OAAO,UACL,MAAM,QAAQ,CAAC;2EAAK,MAAM,KAAK,IAAI,EAAE;wEAAG,KAAK,EAAE;qEAAC,IAChD,MAAM,QAAQ,CACZ,MAAM,KAAK,EAAE,OACT,CAAC,QAAU,UAAU,KAAK,EAAE;gEAGxC;;;;;;;;;;;sEAGJ,8OAAC,gIAAA,CAAA,YAAS;4DAAC,WAAU;sEAClB,cAAA,8OAAC;gEAAI,WAAU;;kFACV,8OAAC;;0FACG,8OAAC;gFAAE,WAAU;0FAAW,cAAc,CAAC,KAAK,QAAQ,CAAE;;;;;;0FACtD,8OAAC;gFAAE,WAAU;0FAAiC,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,KAAK,IAAI,GAAG,OAAO;oFAAE,QAAQ,4IAAA,CAAA,KAAE;gFAAC;;;;;;;;;;;;kFAElG,8OAAC;wEAAE,WAAU;kFAAe,eAAe,KAAK,MAAM;;;;;;;;;;;;;;;;;;mDAvB7D,KAAK,EAAE;;;;;4CA4BhB;2CAlCK,KAAK,EAAE;;;;;;;;;;8CAsCpB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIxB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;sCAAK;;;;;;sCACN,8OAAC;sCAAM,eAAe;;;;;;;;;;;;8BAE5B,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACV,8OAAC,mIAAA,CAAA,UAAO;;sDACP,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,OAAO;sDACrB,cAAA,8OAAC,gIAAA,CAAA,cAAW;0DACV,cAAA,8OAAC,kIAAA,CAAA,SAAM;oDACL,SAAS;oDACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qCACA,CAAC,MAAM,KAAK,IAAI;;wDAGjB,MAAM,KAAK,GACV,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,KAAK,EAAE,OAAO;4DAAE,QAAQ,4IAAA,CAAA,KAAE;wDAAC,mBAExC,8OAAC;sEAAK;;;;;;sEAER,8OAAC,8MAAA,CAAA,eAAY;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;sDAI9B,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,WAAU;4CAAa,OAAM;sDAC3C,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDACP,MAAK;gDACL,UAAU,MAAM,KAAK;gDACrB,UAAU,MAAM,QAAQ;gDACxB,UAAU,CAAC,OACT,OAAO,IAAI,UAAU,OAAO,IAAI,KAAK;gDAEvC,YAAY;gDACZ,QAAQ,4IAAA,CAAA,KAAE;;;;;;;;;;;;;;;;;8CAIhB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAwB,GAAG,KAAK;;;;;;;;;;;8CAErD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,kIAAA,CAAA,eAAY;oBAAC,WAAU;;sCACnB,8OAAC,kIAAA,CAAA,cAAW;4BAAC,OAAO;sCACjB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,SAAQ;0CAAU;;;;;;;;;;;sCAE5C,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,UAAU,gBAAgB,gBAAgB;;gCAC3D,8BAAgB,8OAAC,iNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA+B;;;;;;;;;;;;;;;;;;;;;;;;AAOnF","debugId":null}},
    {"offset": {"line": 2355, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2465, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 2507, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { db } from './firebase';\nimport {\n  collection,\n  addDoc,\n  updateDoc,\n  doc,\n  writeBatch,\n  Timestamp,\n} from 'firebase/firestore';\n\nconst IncomeSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  category: z.enum(['congregation', 'worldwide_work', 'renovation'], {\n    errorMap: () => ({ message: 'Por favor, selecciona una categoría válida.' }),\n  }),\n});\n\nconst ExpenseSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n});\n\nconst BranchTransferSchema = z.object({\n  amount: z.coerce.number().positive({ message: 'La cantidad debe ser mayor que cero.' }),\n  date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n  description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n  transactionIds: z.array(z.string()).min(1, { message: 'Debes seleccionar al menos una transacción.' }),\n});\n\nconst UpdateTransactionSchema = z.object({\n    id: z.string(),\n    type: z.enum(['income', 'expense']),\n    amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n    date: z.string().min(1, { message: 'La fecha es obligatoria.' }),\n    description: z.string().max(100, { message: 'La descripción debe tener 100 caracteres o menos.' }).optional(),\n    category: z.enum(['congregation', 'worldwide_work', 'renovation']).optional(),\n    sentToBranch: z.boolean().optional(),\n});\n\nexport async function addIncomeAction(data: z.infer<typeof IncomeSchema>) {\n  const validatedFields = IncomeSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n  \n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description, category } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'income',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n        category,\n        sentToBranch: false,\n    });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Ingreso añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el ingreso.' };\n  }\n}\n\nexport async function addExpenseAction(data: z.infer<typeof ExpenseSchema>) {\n  const validatedFields = ExpenseSchema.safeParse(data);\n\n  if (!validatedFields.success) {\n    return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n  }\n\n  if (!db) {\n    return { success: false, message: 'La base de datos no está disponible.' };\n  }\n\n  try {\n    const { amount, date, description } = validatedFields.data;\n    await addDoc(collection(db, 'transactions'), {\n        type: 'expense',\n        amount,\n        date: Timestamp.fromDate(new Date(date)),\n        description: description || '',\n     });\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Gasto añadido correctamente.' };\n  } catch (e: any) {\n    return { success: false, message: e.message || 'Error al añadir el gasto.' };\n  }\n}\n\nexport async function addBranchTransferAction(data: z.infer<typeof BranchTransferSchema>) {\n    const validatedFields = BranchTransferSchema.safeParse(data);\n  \n    if (!validatedFields.success) {\n      return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n      return { success: false, message: 'La base de datos no está disponible.' };\n    }\n  \n    try {\n      const { amount, date, description, transactionIds } = validatedFields.data;\n      \n      const batch = writeBatch(db);\n\n      // Mark selected transactions as sent\n      transactionIds.forEach(id => {\n          const docRef = doc(db, 'transactions', id);\n          batch.update(docRef, { sentToBranch: true });\n      });\n\n      // Add the new branch_transfer transaction\n      const newTransferRef = doc(collection(db, 'transactions'));\n      batch.set(newTransferRef, {\n        amount, \n        date: Timestamp.fromDate(new Date(date)), \n        type: 'branch_transfer', \n        description: description || 'Envío a la sucursal',\n      });\n\n      await batch.commit();\n\n      revalidatePath('/dashboard');\n      return { success: true, message: 'Envío a la sucursal añadido correctamente.' };\n    } catch (e: any) {\n      return { success: false, message: e.message || 'Error al añadir el envío a la sucursal.' };\n    }\n  }\n\nexport async function updateTransactionAction(data: z.infer<typeof UpdateTransactionSchema>) {\n    const validatedFields = UpdateTransactionSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, message: 'Datos inválidos.', errors: validatedFields.error.flatten().fieldErrors };\n    }\n\n    if (!db) {\n        return { success: false, message: 'La base de datos no está disponible.' };\n    }\n\n    try {\n        const { id, ...rest } = validatedFields.data;\n        \n        const transactionRef = doc(db, 'transactions', id);\n        \n        // Firestore requires a plain object.\n        const updateData: any = {\n            ...rest,\n            date: Timestamp.fromDate(new Date(rest.date)),\n            description: rest.description || '',\n        };\n\n        // Remove undefined fields so Firestore doesn't overwrite them\n        Object.keys(updateData).forEach(key => updateData[key] === undefined && delete updateData[key]);\n        \n        await updateDoc(transactionRef, updateData);\n\n        revalidatePath('/dashboard');\n        return { success: true, message: 'Transacción actualizada correctamente.' };\n    } catch (e: any) {\n        const message = e instanceof Error ? e.message : 'Ocurrió un error desconocido.';\n        return { success: false, message: `Error al actualizar la transacción: ${message}` };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA6IsB,0BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2520, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2556, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/edit-transaction-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { CalendarIcon, Loader2 } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { updateTransactionAction } from '@/lib/actions';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { Calendar } from './ui/calendar';\nimport { cn } from '@/lib/utils';\nimport type { Transaction } from '@/lib/types';\nimport { Switch } from './ui/switch';\n\nconst FormSchema = z.object({\n    amount: z.coerce.number().positive({ message: 'La cantidad debe ser un número positivo.' }),\n    date: z.date({ required_error: 'La fecha es obligatoria.' }),\n    description: z.string().max(100).optional(),\n    category: z.enum(['congregation', 'worldwide_work', 'renovation']).optional(),\n    sentToBranch: z.boolean().optional(),\n});\n  \ntype FormValues = z.infer<typeof FormSchema>;\n\ninterface EditTransactionDialogProps {\n  transaction: Transaction;\n  children: React.ReactNode;\n}\n\nexport function EditTransactionDialog({ transaction, children }: EditTransactionDialogProps) {\n  const [open, setOpen] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      amount: transaction.amount,\n      date: new Date(transaction.date),\n      description: transaction.description,\n      category: transaction.category,\n      sentToBranch: transaction.sentToBranch,\n    },\n  });\n  const { isSubmitting } = form.formState;\n\n  const handleSuccess = (message: string) => {\n    toast({\n      title: 'Éxito',\n      description: message,\n    });\n    setOpen(false);\n    window.location.reload();\n  };\n\n  const handleError = (message: string) => {\n    toast({\n      variant: 'destructive',\n      title: 'Error',\n      description: message,\n    });\n  };\n\n  async function onSubmit(values: FormValues) {\n    const data = {\n        id: transaction.id,\n        type: transaction.type as 'income' | 'expense',\n        ...values,\n        date: format(values.date, 'yyyy-MM-dd'),\n    };\n    \n    const result = await updateTransactionAction(data);\n    if (result.success) {\n      handleSuccess(result.message);\n    } else {\n      handleError(result.message || 'Ocurrió un error desconocido.');\n    }\n  }\n\n  const isBranchDonation = transaction.type === 'income' && \n                           (transaction.category === 'worldwide_work' || transaction.category === 'renovation');\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {children}\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle>Editar Transacción</DialogTitle>\n          <DialogDescription>\n            Modifica los detalles de la transacción y guarda los cambios.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n                <FormField\n                control={form.control}\n                name=\"amount\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Cantidad</FormLabel>\n                    <FormControl>\n                        <Input type=\"number\" step=\"0.01\" placeholder=\"0.00\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n                {transaction.type === 'income' && (\n                     <FormField\n                        control={form.control}\n                        name=\"category\"\n                        render={({ field }) => (\n                            <FormItem>\n                            <FormLabel>Categoría</FormLabel>\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                <FormControl>\n                                <SelectTrigger>\n                                    <SelectValue placeholder=\"Selecciona una categoría\" />\n                                </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                <SelectItem value=\"congregation\">Congregación</SelectItem>\n                                <SelectItem value=\"worldwide_work\">Obra Mundial</SelectItem>\n                                <SelectItem value=\"renovation\">Renovación</SelectItem>\n                                </SelectContent>\n                            </Select>\n                            <FormMessage />\n                            </FormItem>\n                        )}\n                    />\n                )}\n                <FormField\n                    control={form.control}\n                    name=\"date\"\n                    render={({ field }) => (\n                        <FormItem className=\"flex flex-col\">\n                        <FormLabel>Fecha</FormLabel>\n                        <Popover>\n                            <PopoverTrigger asChild>\n                            <FormControl>\n                                <Button\n                                variant={'outline'}\n                                className={cn(\n                                    'w-full pl-3 text-left font-normal',\n                                    !field.value && 'text-muted-foreground'\n                                )}\n                                >\n                                {field.value ? (\n                                    format(field.value, 'PPP', { locale: es })\n                                ) : (\n                                    <span>Elige una fecha</span>\n                                )}\n                                <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                                </Button>\n                            </FormControl>\n                            </PopoverTrigger>\n                            <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                            <Calendar\n                                mode=\"single\"\n                                selected={field.value}\n                                onSelect={field.onChange}\n                                disabled={(date) =>\n                                date > new Date() || date < new Date('1900-01-01')\n                                }\n                                initialFocus\n                                locale={es}\n                            />\n                            </PopoverContent>\n                        </Popover>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                />\n                <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Descripción (Opcional)</FormLabel>\n                    <FormControl>\n                        <Input placeholder=\"p.ej., Donación mensual\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                    </FormItem>\n                )}\n                />\n\n                {isBranchDonation && (\n                    <FormField\n                        control={form.control}\n                        name=\"sentToBranch\"\n                        render={({ field }) => (\n                            <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm\">\n                                <div className=\"space-y-0.5\">\n                                    <FormLabel>Enviado a Sucursal</FormLabel>\n                                </div>\n                                <FormControl>\n                                    <Switch\n                                    checked={field.value}\n                                    onCheckedChange={field.onChange}\n                                    />\n                                </FormControl>\n                            </FormItem>\n                        )}\n                    />\n                )}\n\n                <DialogFooter className=\"pt-4\">\n                    <DialogClose asChild>\n                        <Button type=\"button\" variant=\"outline\">Cancelar</Button>\n                    </DialogClose>\n                    <Button type=\"submit\" disabled={isSubmitting}>\n                        {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                        Guardar Cambios\n                    </Button>\n                </DialogFooter>\n            </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3090, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/recent-transactions.tsx"],"sourcesContent":["'use client';\n\nimport * as XLSX from 'xlsx';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Badge } from './ui/badge';\nimport type { Transaction } from '@/lib/types';\nimport { cn } from '@/lib/utils';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { EditTransactionDialog } from './edit-transaction-dialog';\nimport { Button } from './ui/button';\nimport { FilePenLine, FileSpreadsheet } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\n\nexport function RecentTransactions({\n  transactions,\n  title,\n  description,\n}: {\n  transactions: Transaction[];\n  title: string;\n  description: string;\n}) {\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-ES', {\n      style: 'currency',\n      currency: 'EUR',\n    }).format(amount);\n  };\n\n  const categoryLabels: Record<string, string> = {\n    congregation: 'Congregación',\n    worldwide_work: 'Obra Mundial',\n    renovation: 'Renovación'\n  }\n\n  const typeLabels: Record<string, string> = {\n    income: 'Ingreso',\n    expense: 'Gasto',\n    branch_transfer: 'Envío a Sucursal'\n  }\n\n  const getBadgeClass = (type: string) => {\n    switch (type) {\n      case 'income':\n        return 'text-green-600 border-green-200';\n      case 'expense':\n        return 'text-red-600 border-red-200';\n      case 'branch_transfer':\n        return 'text-blue-600 border-blue-200';\n      default:\n        return '';\n    }\n  }\n\n  const getAmountClass = (type: string) => {\n    switch (type) {\n        case 'income':\n          return 'text-green-600';\n        case 'expense':\n        case 'branch_transfer':\n          return 'text-red-600';\n        default:\n          return '';\n      }\n  }\n\n  const getAmountPrefix = (type: string) => {\n    return type === 'income' ? '+' : '-';\n  }\n  \n  const getStatusBadge = (transaction: Transaction) => {\n    if (transaction.type === 'income' && (transaction.category === 'worldwide_work' || transaction.category === 'renovation')) {\n        if (transaction.sentToBranch) {\n            return <Badge variant=\"outline\" className=\"text-gray-600 border-gray-200\">Enviado</Badge>;\n        } else {\n            return <Badge variant=\"outline\" className=\"text-orange-600 border-orange-200\">Pendiente</Badge>;\n        }\n    }\n    return null;\n  }\n\n  const handleExport = () => {\n    const dataToExport = transactions.map(t => ({\n        'Fecha': format(new Date(t.date), 'dd/MM/yyyy'),\n        'Descripción': t.description || 'N/A',\n        'Tipo': typeLabels[t.type] || 'N/A',\n        'Categoría': t.category ? categoryLabels[t.category] : 'N/A',\n        'Estado': t.type === 'income' && (t.category === 'worldwide_work' || t.category === 'renovation') ? (t.sentToBranch ? 'Enviado' : 'Pendiente') : 'N/A',\n        'Importe': t.type === 'income' ? t.amount : -t.amount,\n    }));\n    \n    const worksheet = XLSX.utils.json_to_sheet(dataToExport);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Transacciones');\n    \n    // Set column widths\n    worksheet['!cols'] = [\n        { wch: 12 }, // Fecha\n        { wch: 40 }, // Descripción\n        { wch: 15 }, // Tipo\n        { wch: 15 }, // Categoría\n        { wch: 12 }, // Estado\n        { wch: 12 }, // Importe\n    ];\n\n    XLSX.writeFile(workbook, 'transacciones.xlsx');\n  }\n\n  return (\n    <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n            <div>\n                <CardTitle>{title}</CardTitle>\n                <CardDescription>{description}</CardDescription>\n            </div>\n            <TooltipProvider>\n                <Tooltip>\n                    <TooltipTrigger asChild>\n                         <Button variant=\"outline\" size=\"icon\" onClick={handleExport} disabled={transactions.length === 0}>\n                            <FileSpreadsheet className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Exportar a Excel</span>\n                        </Button>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                        <p>Exportar a Excel</p>\n                    </TooltipContent>\n                </Tooltip>\n            </TooltipProvider>\n        </CardHeader>\n      <CardContent>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Descripción</TableHead>\n              <TableHead>Tipo</TableHead>\n              <TableHead>Categoría</TableHead>\n              <TableHead>Estado</TableHead>\n              <TableHead>Fecha</TableHead>\n              <TableHead className=\"text-right\">Cantidad</TableHead>\n              <TableHead className=\"w-[50px]\">Acciones</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {transactions.map((transaction) => (\n              <TableRow key={transaction.id}>\n                <TableCell className=\"font-medium\">{transaction.description || 'N/A'}</TableCell>\n                <TableCell>\n                    <Badge variant=\"outline\" className={cn(getBadgeClass(transaction.type))}>\n                        {typeLabels[transaction.type]}\n                    </Badge>\n                </TableCell>\n                <TableCell>\n                    {transaction.category ? (\n                        <Badge variant=\"secondary\">{categoryLabels[transaction.category]}</Badge>\n                    ) : 'N/A'}\n                </TableCell>\n                <TableCell>\n                    {getStatusBadge(transaction)}\n                </TableCell>\n                <TableCell>{format(new Date(transaction.date), 'PPP', { locale: es })}</TableCell>\n                <TableCell className={cn(\"text-right font-semibold\", getAmountClass(transaction.type))}>\n                  {getAmountPrefix(transaction.type)} {formatCurrency(transaction.amount)}\n                </TableCell>\n                 <TableCell className=\"text-right\">\n                    {transaction.type !== 'branch_transfer' && (\n                        <EditTransactionDialog transaction={transaction}>\n                          <TooltipProvider>\n                            <Tooltip>\n                              <TooltipTrigger asChild>\n                                <Button variant=\"ghost\" size=\"icon\">\n                                  <FilePenLine className=\"h-4 w-4\" />\n                                  <span className=\"sr-only\">Editar</span>\n                                </Button>\n                              </TooltipTrigger>\n                              <TooltipContent>\n                                <p>Editar Transacción</p>\n                              </TooltipContent>\n                            </Tooltip>\n                          </TooltipProvider>\n                        </EditTransactionDialog>\n                    )}\n                </TableCell>\n              </TableRow>\n            ))}\n             {transactions.length === 0 && (\n                <TableRow>\n                    <TableCell colSpan={7} className=\"text-center text-muted-foreground py-10\">\n                        No hay transacciones para este período.\n                    </TableCell>\n                </TableRow>\n             )}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3578, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3874, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/charts.tsx"],"sourcesContent":["'use client';\n\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, ResponsiveContainer, Pie, PieChart, Cell } from 'recharts';\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n} from '@/components/ui/chart';\nimport { es } from 'date-fns/locale';\n\ninterface MonthlyData {\n  month: string;\n  income: number;\n  expenses: number;\n}\n\ninterface IncomeByCategory {\n    [key: string]: number;\n}\n\nconst chartConfig = {\n  income: {\n    label: 'Ingresos',\n    color: 'hsl(var(--chart-1))',\n  },\n  expenses: {\n    label: 'Gastos',\n    color: 'hsl(var(--chart-3))',\n  },\n  congregation: {\n    label: 'Congregación',\n    color: 'hsl(var(--chart-1))',\n  },\n  worldwide_work: {\n    label: 'Obra Mundial',\n    color: 'hsl(var(--chart-2))',\n  },\n  renovation: {\n    label: 'Renovación',\n    color: 'hsl(var(--chart-4))',\n  },\n};\n\nexport function MonthlyOverviewChart({ data }: { data: MonthlyData[] }) {\n  return (\n    <ChartContainer config={chartConfig} className=\"min-h-[200px] w-full\">\n      <BarChart accessibilityLayer data={data}>\n        <CartesianGrid vertical={false} />\n        <XAxis\n          dataKey=\"month\"\n          tickLine={false}\n          tickMargin={10}\n          axisLine={false}\n          tickFormatter={(value) => {\n            const date = new Date(value);\n            return date.toLocaleString('es-ES', { month: 'short' }).replace('.', '');\n           }}\n        />\n        <YAxis\n            tickFormatter={(value) => `€${value/1000}k`}\n        />\n        <ChartTooltip content={<ChartTooltipContent />} />\n        <ChartLegend content={<ChartLegendContent />} />\n        <Bar dataKey=\"income\" fill=\"var(--color-income)\" radius={4} />\n        <Bar dataKey=\"expenses\" fill=\"var(--color-expenses)\" radius={4} />\n      </BarChart>\n    </ChartContainer>\n  );\n}\n\nexport function IncomeBreakdownChart({ data }: { data: IncomeByCategory }) {\n    const chartData = Object.entries(data).map(([key, value]) => ({\n        name: chartConfig[key as keyof typeof chartConfig]?.label || key,\n        value,\n        fill: `var(--color-${key.replace('_', '-')})`,\n    }));\n    \n    return (\n        <ChartContainer config={chartConfig} className=\"min-h-[200px] w-full\">\n            <PieChart>\n                <ChartTooltip content={<ChartTooltipContent nameKey=\"name\" />} />\n                <Pie data={chartData} dataKey=\"value\" nameKey=\"name\" innerRadius={60} outerRadius={80} paddingAngle={5}>\n                    {chartData.map((entry) => (\n                        <Cell key={`cell-${entry.name}`} fill={entry.fill} />\n                    ))}\n                </Pie>\n                 <ChartLegend content={<ChartLegendContent />} />\n            </PieChart>\n        </ChartContainer>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;;;;AAsBA,MAAM,cAAc;IAClB,QAAQ;QACN,OAAO;QACP,OAAO;IACT;IACA,UAAU;QACR,OAAO;QACP,OAAO;IACT;IACA,cAAc;QACZ,OAAO;QACP,OAAO;IACT;IACA,gBAAgB;QACd,OAAO;QACP,OAAO;IACT;IACA,YAAY;QACV,OAAO;QACP,OAAO;IACT;AACF;AAEO,SAAS,qBAAqB,EAAE,IAAI,EAA2B;IACpE,qBACE,8OAAC,iIAAA,CAAA,iBAAc;QAAC,QAAQ;QAAa,WAAU;kBAC7C,cAAA,8OAAC,oJAAA,CAAA,WAAQ;YAAC,kBAAkB;YAAC,MAAM;;8BACjC,8OAAC,6JAAA,CAAA,gBAAa;oBAAC,UAAU;;;;;;8BACzB,8OAAC,qJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,UAAU;oBACV,YAAY;oBACZ,UAAU;oBACV,eAAe,CAAC;wBACd,MAAM,OAAO,IAAI,KAAK;wBACtB,OAAO,KAAK,cAAc,CAAC,SAAS;4BAAE,OAAO;wBAAQ,GAAG,OAAO,CAAC,KAAK;oBACtE;;;;;;8BAEH,8OAAC,qJAAA,CAAA,QAAK;oBACF,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,QAAM,KAAK,CAAC,CAAC;;;;;;8BAE/C,8OAAC,iIAAA,CAAA,eAAY;oBAAC,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;;;;;;;;;;8BAC3C,8OAAC,iIAAA,CAAA,cAAW;oBAAC,uBAAS,8OAAC,iIAAA,CAAA,qBAAkB;;;;;;;;;;8BACzC,8OAAC,mJAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAS,MAAK;oBAAsB,QAAQ;;;;;;8BACzD,8OAAC,mJAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAW,MAAK;oBAAwB,QAAQ;;;;;;;;;;;;;;;;;AAIrE;AAEO,SAAS,qBAAqB,EAAE,IAAI,EAA8B;IACrE,MAAM,YAAY,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK,CAAC;YAC1D,MAAM,WAAW,CAAC,IAAgC,EAAE,SAAS;YAC7D;YACA,MAAM,CAAC,YAAY,EAAE,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC;QACjD,CAAC;IAED,qBACI,8OAAC,iIAAA,CAAA,iBAAc;QAAC,QAAQ;QAAa,WAAU;kBAC3C,cAAA,8OAAC,oJAAA,CAAA,WAAQ;;8BACL,8OAAC,iIAAA,CAAA,eAAY;oBAAC,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;wBAAC,SAAQ;;;;;;;;;;;8BACpD,8OAAC,+IAAA,CAAA,MAAG;oBAAC,MAAM;oBAAW,SAAQ;oBAAQ,SAAQ;oBAAO,aAAa;oBAAI,aAAa;oBAAI,cAAc;8BAChG,UAAU,GAAG,CAAC,CAAC,sBACZ,8OAAC,oJAAA,CAAA,OAAI;4BAA4B,MAAM,MAAM,IAAI;2BAAtC,CAAC,KAAK,EAAE,MAAM,IAAI,EAAE;;;;;;;;;;8BAGtC,8OAAC,iIAAA,CAAA,cAAW;oBAAC,uBAAS,8OAAC,iIAAA,CAAA,qBAAkB;;;;;;;;;;;;;;;;;;;;;AAI1D","debugId":null}},
    {"offset": {"line": 4076, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/icons.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function AppLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\n      <path d=\"M2 17l10 5 10-5\" />\n      <path d=\"M2 12l10 5 10-5\" />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEO,SAAS,QAAQ,KAA8B;IACpD,qBACE,8OAAC;QACE,GAAG,KAAK;QACT,OAAM;QACN,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;;0BAEf,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;;;;;;;AAGd","debugId":null}},
    {"offset": {"line": 4126, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/dashboard-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useRouter, usePathname, useSearchParams } from 'next/navigation';\nimport * as XLSX from 'xlsx';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  ArrowUpRight,\n  ArrowDownLeft,\n  Scale,\n  Landmark,\n  Globe,\n  Paintbrush,\n  PiggyBank,\n  Users,\n  LogOut,\n} from 'lucide-react';\nimport { Button } from './ui/button';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\n\nimport type { Transaction } from '@/lib/types';\nimport { AddTransactionDialog } from './add-transaction-dialog';\nimport { RecentTransactions } from './recent-transactions';\nimport { MonthlyOverviewChart, IncomeBreakdownChart } from './charts';\nimport { AppLogo } from './icons';\n\ninterface DashboardClientProps {\n  transactions: Transaction[];\n  allTransactions: Transaction[];\n  totalIncome: number;\n  totalExpenses: number;\n  balance: number;\n  branchContribution: number;\n  incomeByCategory: Record<string, number>;\n  monthlyData: { month: string; income: number; expenses: number }[];\n  years: number[];\n  selectedYear: number;\n  selectedMonth: number;\n  pendingBranchTransactions: Transaction[];\n  totalBalance: number;\n  congregationIncome: number;\n  worldwideWorkIncome: number;\n  renovationIncome: number;\n}\n\nexport default function DashboardClient({\n  transactions,\n  allTransactions,\n  totalIncome,\n  totalExpenses,\n  balance,\n  branchContribution,\n  incomeByCategory,\n  monthlyData,\n  years,\n  selectedYear,\n  selectedMonth,\n  pendingBranchTransactions,\n  totalBalance,\n  congregationIncome,\n  worldwideWorkIncome,\n  renovationIncome,\n}: DashboardClientProps) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-ES', {\n      style: 'currency',\n      currency: 'EUR',\n    }).format(amount);\n  };\n  \n  const handleFilterChange = (type: 'year' | 'month', value: string) => {\n    const current = new URLSearchParams(Array.from(searchParams.entries()));\n    current.set(type, value);\n    const search = current.toString();\n    const query = search ? `?${search}` : \"\";\n    router.push(`${pathname}${query}`);\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('isAuthenticated');\n    router.push('/login');\n  };\n\n  const months = [\n    { value: 1, label: 'Enero' },\n    { value: 2, label: 'Febrero' },\n    { value: 3, label: 'Marzo' },\n    { value: 4, label: 'Abril' },\n    { value: 5, label: 'Mayo' },\n    { value: 6, 'label': 'Junio' },\n    { value: 7, label: 'Julio' },\n    { value: 8, label: 'Agosto' },\n    { value: 9, label: 'Septiembre' },\n    { value: 10, label: 'Octubre' },\n    { value: 11, label: 'Noviembre' },\n    { value: 12, label: 'Diciembre' },\n  ];\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col bg-muted/40\">\n      <header className=\"sticky top-0 flex h-16 items-center gap-4 border-b bg-background/80 backdrop-blur-sm px-4 md:px-6 z-10\">\n        <div className=\"flex items-center gap-2 font-semibold\">\n            <AppLogo className=\"h-6 w-6 text-primary\" />\n            <span className=\"\">Finanzas JW</span>\n        </div>\n        <div className=\"ml-auto flex items-center gap-2\">\n            <div className='flex gap-2'>\n              <Select value={String(selectedYear)} onValueChange={(value) => handleFilterChange('year', value)}>\n                <SelectTrigger className=\"w-[120px]\">\n                  <SelectValue placeholder=\"Año\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {years.map(year => (\n                    <SelectItem key={year} value={String(year)}>{year}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <Select value={String(selectedMonth)} onValueChange={(value) => handleFilterChange('month', value)}>\n                <SelectTrigger className=\"w-[140px]\">\n                  <SelectValue placeholder=\"Mes\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {months.map(month => (\n                    <SelectItem key={month.value} value={String(month.value)}>{month.label}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <AddTransactionDialog pendingBranchTransactions={pendingBranchTransactions} />\n            <TooltipProvider>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button variant=\"outline\" size=\"icon\" onClick={handleLogout}>\n                    <LogOut className=\"h-4 w-4\" />\n                    <span className=\"sr-only\">Cerrar Sesión</span>\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>Cerrar Sesión</p>\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n        </div>\n      </header>\n      <main className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\">\n        <Tabs defaultValue=\"overview\" className=\"w-full space-y-4\">\n          <TabsList>\n            <TabsTrigger value=\"overview\">Resumen</TabsTrigger>\n            <TabsTrigger value=\"transactions\">Transacciones del Mes</TabsTrigger>\n            <TabsTrigger value=\"all\">Todas</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"overview\" className=\"space-y-4\">\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Ingresos del Mes\n                  </CardTitle>\n                  <ArrowUpRight className=\"h-4 w-4 text-green-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(totalIncome)}</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Gastos del Mes\n                  </CardTitle>\n                  <ArrowDownLeft className=\"h-4 w-4 text-red-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(totalExpenses)}</div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Balance del Mes</CardTitle>\n                  <Scale className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(balance)}</div>\n                </CardContent>\n              </Card>\n               <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Total en Cuenta\n                  </CardTitle>\n                  <PiggyBank className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">\n                    {formatCurrency(totalBalance)}\n                  </div>\n                   <p className=\"text-xs text-muted-foreground\">\n                    Saldo total acumulado\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Ingresos Congregación\n                  </CardTitle>\n                  <Users className=\"h-4 w-4 text-cyan-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(congregationIncome)}</div>\n                   <p className=\"text-xs text-muted-foreground\">\n                    Donaciones del mes\n                  </p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Ingresos Obra Mundial\n                  </CardTitle>\n                  <Globe className=\"h-4 w-4 text-blue-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(worldwideWorkIncome)}</div>\n                   <p className=\"text-xs text-muted-foreground\">\n                    Donaciones del mes\n                  </p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Ingresos Renovación\n                  </CardTitle>\n                  <Paintbrush className=\"h-4 w-4 text-orange-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(renovationIncome)}</div>\n                   <p className=\"text-xs text-muted-foreground\">\n                    Donaciones del mes\n                  </p>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Enviado a la Sucursal\n                  </CardTitle>\n                  <Landmark className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">\n                    {formatCurrency(branchContribution)}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Total de envíos este mes\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n              <Card className=\"lg:col-span-4\">\n                <CardHeader>\n                  <CardTitle>Resumen Anual</CardTitle>\n                  <CardDescription>Ingresos y gastos de los últimos 6 meses.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"pl-2\">\n                  <MonthlyOverviewChart data={monthlyData} />\n                </CardContent>\n              </Card>\n              <Card className=\"lg:col-span-3\">\n                <CardHeader>\n                  <CardTitle>Desglose de Ingresos del Mes</CardTitle>\n                  <CardDescription>\n                    Desglose de ingresos por fuente para el mes seleccionado.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <IncomeBreakdownChart data={incomeByCategory} />\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n           <TabsContent value=\"transactions\" className=\"space-y-4\">\n                <RecentTransactions transactions={transactions} title=\"Transacciones del Mes\" description=\"Una lista de todas tus transacciones para el período seleccionado.\"/>\n           </TabsContent>\n           <TabsContent value=\"all\" className=\"space-y-4\">\n                <RecentTransactions transactions={allTransactions} title=\"Todas las Transacciones\" description=\"Una lista de todas tus transacciones históricas.\"/>\n           </TabsContent>\n        </Tabs>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5070, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 5214, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  projectId: 'finanzas-jw',\n  appId: '1:857727640897:web:5ed8d3d20e9b2452afadc0',\n  storageBucket: 'finanzas-jw.firebasestorage.app',\n  apiKey: 'AIzaSyBW7N7R4YGnIArQNL_5Onewntgq25RKnVo',\n  authDomain: 'finanzas-jw.firebaseapp.com',\n  messagingSenderId: '857727640897',\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\n\nexport { app, db };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AACvD;AAAA;AACA;AAAA;;;AAEA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,eAAe;IACf,QAAQ;IACR,YAAY;IACZ,mBAAmB;AACrB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 5244, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/components/home-page-content.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport type { Transaction, FirestoreTransaction } from '@/lib/types';\nimport DashboardClient from '@/components/dashboard-client';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { db } from '@/lib/firebase';\nimport { collection, getDocs, orderBy, query, Timestamp } from 'firebase/firestore';\n\n\ninterface HomePageContentProps {\n  monthParam: string | null;\n  yearParam: string | null;\n}\n\nconst serializeTransaction = (doc: any): Transaction => {\n    const data = doc.data() as FirestoreTransaction;\n    return {\n      id: doc.id,\n      ...data,\n      date: (data.date as unknown as Timestamp).toDate(),\n    };\n  };\n\nexport default function HomePageContent({ monthParam, yearParam }: HomePageContentProps) {\n  const [data, setData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n\n      if (!db) {\n        setError(\"La conexión con la base de datos no está disponible. Asegúrate de que estás en un entorno de navegador.\");\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const transactionsCol = collection(db, 'transactions');\n        const q = query(transactionsCol, orderBy('date', 'desc'));\n        const querySnapshot = await getDocs(q);\n        const allTransactions = querySnapshot.docs.map(serializeTransaction);\n\n        const pendingBranchTransactions = allTransactions\n            .filter(t => \n                t.type === 'income' && \n                (t.category === 'worldwide_work' || t.category === 'renovation') && \n                !t.sentToBranch\n            );\n\n        const currentYear = new Date().getFullYear();\n        const currentMonth = new Date().getMonth() + 1;\n        \n        const selectedYear = yearParam ? parseInt(yearParam) : currentYear;\n        const selectedMonth = monthParam ? parseInt(monthParam) : currentMonth;\n\n        const transactionsForSelectedPeriod = allTransactions.filter(t => {\n            const transactionDate = new Date(t.date);\n            return transactionDate.getFullYear() === selectedYear && transactionDate.getMonth() + 1 === selectedMonth;\n        });\n\n        let years = [...new Set(allTransactions.map(t => new Date(t.date).getFullYear()))].sort((a,b) => b - a);\n        if (years.length === 0) {\n          years.push(currentYear);\n        }\n\n        const totalIncome = transactionsForSelectedPeriod\n          .filter((t) => t.type === 'income')\n          .reduce((sum, t) => sum + t.amount, 0);\n\n        const totalExpenses = transactionsForSelectedPeriod\n          .filter((t) => t.type === 'expense')\n          .reduce((sum, t) => sum + t.amount, 0);\n        \n        const totalBranchTransfers = transactionsForSelectedPeriod\n          .filter((t) => t.type === 'branch_transfer')\n          .reduce((sum, t) => sum + t.amount, 0);\n\n        const balance = totalIncome - totalExpenses - totalBranchTransfers;\n\n        const incomeByCategory = transactionsForSelectedPeriod\n          .filter((t): t is Transaction & { type: 'income' } => t.type === 'income')\n          .reduce((acc, t) => {\n            if (t.category) {\n              acc[t.category] = (acc[t.category] || 0) + t.amount;\n            }\n            return acc;\n          }, {} as Record<string, number>);\n          \n        const congregationIncome = incomeByCategory['congregation'] || 0;\n        const worldwideWorkIncome = incomeByCategory['worldwide_work'] || 0;\n        const renovationIncome = incomeByCategory['renovation'] || 0;\n\n        const totalIncomeAllTime = allTransactions\n          .filter((t) => t.type === 'income')\n          .reduce((sum, t) => sum + t.amount, 0);\n        \n        const totalExpensesAllTime = allTransactions\n          .filter((t) => t.type === 'expense')\n          .reduce((sum, t) => sum + t.amount, 0);\n\n        const totalBranchTransfersAllTime = allTransactions\n          .filter((t) => t.type === 'branch_transfer')\n          .reduce((sum, t) => sum + t.amount, 0);\n\n        const totalBalance = totalIncomeAllTime - totalExpensesAllTime - totalBranchTransfersAllTime;\n        \n        const monthlyDataAllYears = allTransactions.reduce((acc, t) => {\n          const transactionDate = new Date(t.date);\n          // Use UTC dates to prevent timezone issues\n          const month = new Date(Date.UTC(transactionDate.getFullYear(), transactionDate.getMonth(), 1)).toISOString();\n          if (!acc[month]) {\n            acc[month] = { month, income: 0, expenses: 0 };\n          }\n          if (t.type === 'income') {\n            acc[month].income += t.amount;\n          } else if (t.type === 'expense') {\n            acc[month].expenses += t.amount;\n          }\n          return acc;\n        }, {} as Record<string, { month: string; income: number; expenses: number }>);\n        \n        const sortedMonthlyData = Object.values(monthlyDataAllYears).sort((a,b) => new Date(a.month) < new Date(b.month) ? -1 : 1).slice(-6);\n\n        setData({\n          transactions: transactionsForSelectedPeriod,\n          allTransactions: allTransactions,\n          totalIncome,\n          totalExpenses,\n          balance,\n          branchContribution: totalBranchTransfers,\n          incomeByCategory,\n          monthlyData: sortedMonthlyData,\n          years,\n          selectedYear,\n          selectedMonth,\n          pendingBranchTransactions,\n          totalBalance,\n          congregationIncome,\n          worldwideWorkIncome,\n          renovationIncome\n        });\n\n      } catch (e: any) {\n        console.error(\"Error fetching data.\", e);\n        setError(e.message || 'Ocurrió un error desconocido.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [yearParam, monthParam]);\n\n  if (loading) {\n    return (\n        <div className=\"flex flex-col min-h-screen\">\n            <header className=\"sticky top-0 flex h-16 items-center gap-4 border-b bg-background/80 backdrop-blur-sm px-4 md:px-6 z-10\">\n                <Skeleton className=\"h-6 w-32\" />\n                <div className=\"ml-auto flex items-center gap-4\">\n                    <Skeleton className=\"h-10 w-24\" />\n                    <Skeleton className=\"h-10 w-24\" />\n                    <Skeleton className=\"h-10 w-32\" />\n                </div>\n            </header>\n            <main className=\"flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8\">\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-4\">\n                    <Skeleton className=\"h-24\" />\n                    <Skeleton className=\"h-24\" />\n                    <Skeleton className=\"h-24\" />\n                    <Skeleton className=\"h-24\" />\n                </div>\n                 <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                    <Skeleton className=\"h-24\" />\n                    <Skeleton className=\"h-24\" />\n                    <Skeleton className=\"h-24\" />\n                    <Skeleton className=\"h-24\" />\n                </div>\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n                    <Skeleton className=\"lg:col-span-4 h-96\" />\n                    <Skeleton className=\"lg:col-span-3 h-96\" />\n                </div>\n            </main>\n        </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex h-screen w-full flex-col items-center justify-center bg-red-50 text-red-700 p-4\">\n        <h2 className=\"text-2xl font-bold mb-4\">Error al cargar los datos</h2>\n        <p className=\"mb-4 text-center\">No se pudieron obtener los datos. Por favor, revisa el siguiente error:</p>\n        <pre className=\"w-full max-w-2xl bg-red-100 p-4 rounded-md text-sm text-left whitespace-pre-wrap break-words\">\n          {error}\n        </pre>\n      </div>\n    );\n  }\n\n  if (!data) {\n    return <div className=\"flex h-screen w-full items-center justify-center\">Iniciando...</div>;\n  }\n\n  return (\n    <DashboardClient\n      transactions={data.transactions}\n      allTransactions={data.allTransactions}\n      totalIncome={data.totalIncome}\n      totalExpenses={data.totalExpenses}\n      balance={data.balance}\n      branchContribution={data.branchContribution}\n      incomeByCategory={data.incomeByCategory}\n      monthlyData={data.monthlyData}\n      years={data.years}\n      selectedYear={data.selectedYear}\n      selectedMonth={data.selectedMonth}\n      pendingBranchTransactions={data.pendingBranchTransactions}\n      totalBalance={data.totalBalance}\n      congregationIncome={data.congregationIncome}\n      worldwideWorkIncome={data.worldwideWorkIncome}\n      renovationIncome={data.renovationIncome}\n    />\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5606, "column": 0}, "map": {"version":3,"sources":["file:///Users/ramonmenor/trabajo/github/finanzasjw/src/app/dashboard/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport HomePageContent from '@/components/home-page-content';\n\nfunction DashboardPage() {\n    const searchParams = useSearchParams();\n    const router = useRouter();\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\n        if (!isAuthenticated) {\n            router.replace('/login');\n        }\n    }, [router]);\n\n    const monthParam = searchParams.get('month');\n    const yearParam = searchParams.get('year');\n    \n    if (!isClient || !localStorage.getItem('isAuthenticated')) {\n        return <div className=\"flex h-screen w-full items-center justify-center\">Cargando...</div>;\n    }\n\n    return (\n        <HomePageContent monthParam={monthParam} yearParam={yearParam} />\n    );\n}\n\nexport default function Dashboard() {\n    return (\n        <Suspense fallback={<div className=\"flex h-screen w-full items-center justify-center\">Cargando...</div>}>\n            <DashboardPage />\n        </Suspense>\n    );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAJA;;;;;AAMA,SAAS;IACL,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,YAAY;QACZ,MAAM,kBAAkB,aAAa,OAAO,CAAC;QAC7C,IAAI,CAAC,iBAAiB;YAClB,OAAO,OAAO,CAAC;QACnB;IACJ,GAAG;QAAC;KAAO;IAEX,MAAM,aAAa,aAAa,GAAG,CAAC;IACpC,MAAM,YAAY,aAAa,GAAG,CAAC;IAEnC,IAAI,CAAC,YAAY,CAAC,aAAa,OAAO,CAAC,oBAAoB;QACvD,qBAAO,8OAAC;YAAI,WAAU;sBAAmD;;;;;;IAC7E;IAEA,qBACI,8OAAC,6IAAA,CAAA,UAAe;QAAC,YAAY;QAAY,WAAW;;;;;;AAE5D;AAEe,SAAS;IACpB,qBACI,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;YAAI,WAAU;sBAAmD;;;;;;kBAClF,cAAA,8OAAC;;;;;;;;;;AAGb","debugId":null}}]
}